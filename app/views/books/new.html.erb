<div id="add_books"></div>
<script type="text/javascript" charset="utf-8" src="http://cdn.sencha.io/ext-4.0.7-gpl/ext-all.js"></script>

<script>

var current_user = <%= @user.to_json.html_safe %>;

/*

var DJR = function() {
	this.ajax = function(object, callback, error, method, url, params) {};
	for (var action in this.routes) {
      this[action] = function(act) {
          return function(object, callback, error) {
						//..
          }
      }(action);
  }
}

var EmpresaController = function(){
	DJR.call(this);
}; 
EmpresaController.prototype.routes = {};

var EmpresaController = function(){
	this.controller = DJR;
	this.controller();
}; 
EmpresaController.prototype.routes = {};



if(typeof Array.prototype.add == "undefined") {
  Array.prototype.add = function(item) {
      this[this.length] = item;
      return this;
  }
}

Ext.define('Documento', {
	config: { vendedor: ""},
	constructor: function(cfg) {  this.initConfig(cfg);   }
});

Ext.define('PedidoDeVenda', {
	extend: 'Documento',
	incluirVendedor: function(nome) { 
		this.vendedor = nome;
	}
});

Ext.define('NotaFiscal', {
	mixins: {
		pedido: 'PedidoDeVenda'
	},
	extend: 'Documento'
});
var notaFiscal = new NotaFiscal
notaFiscal.incluirVendedor("Milfont");
notaFiscal.getVendedor();

var notaFiscal = new NotaFiscal({valor:200});
var produto = {valor: 50, temEstoque: function() {return true} };
notaFiscal.incluirProduto( produto );

*/

	var Cordel = function(){
		var token, that = this;
		
		that.upload = function(){
        var form = this.up('form').getForm();
        if(form.isValid()){
            form.submit({
                url: '/books',
								params: { 'authenticity_token': token },
                waitMsg: 'Uploading your book...',
                success: function(fp, action) {
									console.log("o", action.result.book);
                }
            });
        }
    };

		that.reset = function() { 
				this.up('form').getForm().reset(); 
		};
		
		that.panel = {
        frame: true,
        bodyPadding: '10 10 0',
        defaults: {  allowBlank: false, msgTarget: 'side', labelWidth: 50,	xtype: 'textfield'},
        items: [
					{xtype: 'hidden', name: 'book[user_id]', value: current_user.id},
					{fieldLabel: 'Title', name: 'book[title]', anchor: '100%'},
					{
					    fieldLabel: 'Author',
					    store: Ext.create('Ext.data.Store', {
							    fields: ['id', 'name'],
									proxy: {
						        type: 'ajax', url : '/authors.json',
						        reader: {
						            type: 'json', root: 'authors'
						        }
									}
							}),
							listeners: {
								validitychange: function( field, isValid, eOpts ){
									fil = field;
									console.log("validitychange", field, isValid, eOpts);
									
								}
							},
							name: 'book[author_id]',
							typeAhead:false, 
							forceSelection:true,
					    queryMode: 'remote',
					    displayField: 'name',
					    valueField: 'id',
					    xtype: 'combo'
					},

					{
	            xtype: 'container',
	            anchor: '100%',
	            layout:'column',
	            items:[{
	                xtype: 'container',
	                columnWidth:.5,
	                layout: 'anchor',
								  defaults: {labelWidth: 50,	xtype: 'textfield'},
	                items: [{anchor: '95%',fieldLabel: 'Publisher', name: 'book[publisher]', allowBlank: true,	xtype: 'textfield'}]
	            },{
	                xtype: 'container',
	                columnWidth:.3,
	                layout: 'anchor',
  								defaults: {labelWidth: 50,	xtype: 'textfield'},
	                items: [{anchor: '90%',fieldLabel: 'Edition', name: 'book[edition]', allowBlank: true,	xtype: 'textfield'}]
	            },{
	                xtype: 'container',
	                columnWidth:.1,
	                layout: 'anchor',
									defaults: {labelWidth: 30,	xtype: 'textfield'},
	                items: [
										{ xtype: 'datefield', fieldLabel: 'Year', name: 'book[year]', allowBlank: true, hideTrigger: true, width: 100, format: 'Y'}
									]
	            }]
	        },
			
//			author
					
					
					{xtype: 'filefield', emptyText: 'Select an book', fieldLabel: 'Book', name: 'book[file]', buttonText: 'choose', anchor: '100%'}
				],
        buttons: [
					{text: 'Save', handler: that.upload},
					{text: 'Reset', handler: that.reset}
				]
    };
		
		return {
			init: function() {
				token = Ext.select("meta[name='csrf-token']").first().getAttribute('content');
				var formPanel = Ext.create('Ext.form.Panel', that.panel);//.render('add_books');
				
				Ext.create('Ext.window.Window', {
				    title: 'Add book to your library',
				    width: 540,
				    layout: 'fit',
				    items: formPanel
				}).show();
				
			}
		}
	}();

	Ext.onReady(function(){
		Cordel.init();
	});
</script>